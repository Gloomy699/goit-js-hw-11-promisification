{"version":3,"sources":["js/task1.js","js/task2.js","js/task3.js","index.js"],"names":["result","document","querySelector","delay","ms","Promise","resolve","setTimeout","logger","time","message","console","log","insertAdjacentHTML","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","tableColunmName","tableData","index","join","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","onSuccess","onError","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.1d0b1969.js","sourceRoot":"../src","sourcesContent":["const result = document.querySelector(\".js-task1\");\n\nconst delay = ms => {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(ms);\n\t\t}, ms);\n\t});\n};\n\nconst logger = time => {\n\tconst message = `Resolved after ${time}ms`;\n\tconsole.log(message);\n\tresult.insertAdjacentHTML(\"beforeend\", `<p>${message}</p>`);\n}\n\n\n//---------------------------\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const result = document.querySelector(\".js-task2\");\n\nconst users = [\n\t{ name: 'Mango', active: true },\n\t{ name: 'Poly', active: false },\n\t{ name: 'Ajax', active: true },\n\t{ name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n\tconst updatedUsers = allUsers.map(user =>\n\t\tuser.name === userName ? { ...user, active: !user.active } : user,\n\t);\n\treturn Promise.resolve(updatedUsers);\n};\n\nconst logger = updatedUsers => {\n\tconsole.table(updatedUsers);\n\n\tconst tableColunmName = \"<tr><th>Index</th><th>Name</th><th>isActive</th></tr>\";\n\tconst tableData = updatedUsers.map(({ name, active }, index) => `<tr><td>${index}</td><td>${name}</td><td>${active}</td></tr>`).join(\"\");\n\tresult.insertAdjacentHTML(\"beforeend\", `<table>${tableColunmName}${tableData}</table>`);\n}\n\n//---------------------------\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const result = document.querySelector(\".js-task3\");\n\nconst randomIntegerFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\tconst delay = randomIntegerFromInterval(200, 500);\n\n\treturn new Promise((onSuccess, onError) => {\n\t\tsetTimeout(() => {\n\t\t\tconst canProcess = Math.random() > 0.3;\n\n\t\t\tif (canProcess) {\n\t\t\t\tonSuccess({ id: transaction.id, time: delay });\n\t\t\t} else {\n\t\t\t\tonError(transaction.id);\n\t\t\t}\n\t\t}, delay);\n\t})\n};\n\nconst logSuccess = ({ id, time }) => {\n\tconst message = `Transaction ${id} processed in ${time}ms`;\n\tconsole.log(message);\n\tresult.insertAdjacentHTML(\"beforeend\", `<p>${message}</p>`);\n};\n\nconst logError = id => {\n\tconst message = `Error processing transaction ${id}. Please try again later.`;\n\tconsole.warn(message);\n\tresult.insertAdjacentHTML(\"beforeend\", `<p class=\"error\">${message}</p>`);\n};\n\n//----------------------------------------\nmakeTransaction({ id: 70, amount: 150 })\n\t.then(logSuccess)\n\t.catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n\t.then(logSuccess)\n\t.catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n\t.then(logSuccess)\n\t.catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n\t.then(logSuccess)\n\t.catch(logError);","import \"./js/task1.js\";\nimport \"./js/task2.js\";\nimport \"./js/task3.js\";"]}